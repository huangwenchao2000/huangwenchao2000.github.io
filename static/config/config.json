{
    "oracleUrl": "https://oracle.deri.finance/price/",
    "bscProviderUrl":"https://data-seed-prebsc-2-s1.binance.org:8545/",
    "databaseAddress": "0x0D130AEBb0F6b55835650910A5663C988BdF516b",
    "bscurl":[
        "https://data-seed-prebsc-1-s1.binance.org:8545/",
        "https://data-seed-prebsc-2-s1.binance.org:8545/",
        "https://data-seed-prebsc-1-s2.binance.org:8545/",
        "https://data-seed-prebsc-2-s2.binance.org:8545/",
        "https://data-seed-prebsc-1-s3.binance.org:8545/",
        "https://data-seed-prebsc-2-s3.binance.org:8545/"
    ],
    "deriAddress":"0x3C125824a889B46f039ab7449b70AF5b8466F3cf",
    "deriDataBaseAbi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"fromWormhole","type":"address"},{"indexed":false,"internalType":"uint256","name":"toChainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"toWormhole","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"v","type":"uint8"},{"indexed":false,"internalType":"bytes32","name":"r","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"SetSignature","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fromChainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"fromWormhole","type":"address"},{"indexed":false,"internalType":"uint256","name":"toChainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"toWormhole","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"UnsetSignature","type":"event"},{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainId","type":"uint256"},{"internalType":"address","name":"fromWormhole","type":"address"},{"internalType":"uint256","name":"toChainId","type":"uint256"},{"internalType":"address","name":"toWormhole","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"setSignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"signatures","outputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainId","type":"uint256"},{"internalType":"address","name":"fromWormhole","type":"address"},{"internalType":"uint256","name":"toChainId","type":"uint256"},{"internalType":"address","name":"toWormhole","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bool","name":"valid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainId","type":"uint256"},{"internalType":"address","name":"fromWormhole","type":"address"},{"internalType":"uint256","name":"toChainId","type":"uint256"},{"internalType":"address","name":"toWormhole","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"unsetSignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],
    "ropstenProviderUrl": "https://ropsten.infura.io/v3/194f1b2b258e45ad9e50d5e30f2ec8bb", 
    "addresses":[
        [
            {
            
                "Deri": "0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B",
                "Wormhole": "0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e",
                "bTokenSymbol":"DERI",
                "chanId":"3"
            }
        ],
        [
            {
            
                "Deri": "0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2",
                "Wormhole": "0x9028e43114Df57C97c15355224E575DF1e244919",
                "bTokenSymbol":"DERI",
                "chanId":"97"
            }
        ],
        [
            {
            
                "Deri": "0x932458a637F8060AF747167656651b64d4c36620",
                "Wormhole": "0x629B0D3D32BE5ee5F7BF3845914d26446c04165d",
                "bTokenSymbol":"DERI",
                "chanId":"256"
            }
        ]
        
         
    ],
    
    "abifiles": {
        "Wormhole": "Wormhole.abi",
        "Deri": "Deri.abi"
    },

    "methods": {
        "symbol": "symbol",
        "decimals": "decimals",
        "totalSupply": "totalSupply",
        "balanceOf": "balanceOf",
        "allowance": "allowance",
        "approve": "approve",
        "getParameters": "getParameters",
        "getPosition": "getPosition(address)",
        "getStateValues": "getStateValues",
        "depositMargin": "depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "withdrawMargin": "withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "addLiquidity": "addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "removeLiquidity": "removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "tradeWithMargin": "tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)"
    }
}
