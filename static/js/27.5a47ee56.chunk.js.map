{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","useParams","version","chainId","symbol","baseToken","address","type","query","useQuery","networkText","name","props","has","poolInfoClass","classnames","className","onClick"],"mappings":"iTAaOA,EAAaC,EADRC,UAAQC,OACbH,UAkCQI,sBAAO,SAAPA,CAAiBC,aAhChC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KAAM,EACMC,mBAAS,aADf,mBACtBC,EADsB,KACXC,EADW,OAE4BC,sBAAlDC,EAFsB,EAEtBA,QAAQC,EAFc,EAEdA,QAAQC,EAFM,EAENA,OAAOC,EAFD,EAECA,UAAUC,EAFX,EAEWA,QAAQC,EAFnB,EAEmBA,KAC1CC,EAAQC,cACRC,EAAcpB,EAAUa,IAAYb,EAAUa,GAASQ,KACvDC,EAAQ,CAACV,UAAQC,UAAQC,SAAOC,YAAUC,UAAQV,SAAOW,OAAKV,QACjEW,EAAMK,IAAI,iBACZD,EAAK,YAAkBJ,EAAMf,IAAI,gBAE/Be,EAAMK,IAAI,cACZD,EAAK,SAAeJ,EAAMf,IAAI,aAE/B,IAAMqB,EAAgBC,IAAW,cAAchB,GAC/C,OACG,sBAAKiB,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATT,GAA+D,OAAZL,EAAnD,UAAmBG,EAAnB,cAAkCK,GAAiB,UAAwDN,EAAxD,YAAkEC,EAAlE,cAAiFK,KAEtI,qBAAKM,UAAU,wBAAf,SACE,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMjB,EAAc,cAA/D,SACGH,EAAK,2BAIZ,qBAAKmB,UAAU,YAAf,SACE,cAAC,IAAD,eAAqBJ","file":"static/js/27.5a47ee56.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\r\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\r\nimport {DeriEnv} from '../../../lib/web3js/indexV2'\r\nimport config from '../../../config.json'\r\nimport './mining.less'\r\nimport './zh-mining.less'\r\nimport classnames from \"classnames\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport useQuery from '../../../hooks/useQuery'\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nfunction Mining({wallet,lang}){\r\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\r\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\r\n\tconst query = useQuery();\r\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\r\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\r\n\tif(query.has('baseTokenId')) {\r\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\r\n\t}\r\n\tif(query.has('symbolId')){\r\n\t\tprops['symbolId'] = query.get('symbolId')\r\n\t}\r\n\tconst poolInfoClass = classnames('mining-info',currentTab)\r\n\treturn(\r\n    <div className={poolInfoClass}>\r\n\t\t\t<div className=\"pool-header\">\r\n\t\t\t\t\t<div className=\"pool-network\">\r\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  version === 'v2' ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"check-trade-liquidity\">\r\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\r\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='pool-info'>\r\n\t\t\t\t\t<LiquidityMining {...props}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}